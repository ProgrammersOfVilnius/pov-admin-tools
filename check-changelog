#!/usr/bin/python
import optparse
import re

__version__ = '1.0.0'

date_rx = re.compile('^\d{4}-\d{2}-\d{2}( \d{2}:\d{2})?')


def warn(filename, lineno, message):
    print "%s:%d: %s" % (filename, lineno, message)


def check(filename):
    prev_date = None
    prev_dates = {}
    for n, line in enumerate(open(filename), 1):
        m = date_rx.match(line)
        if not m:
            continue
        cur_date = m.group(0)
        if prev_date is not None and cur_date < prev_date:
            warn(filename, n, 'date out of order (%s after %s)' % (cur_date, prev_date))
            if cur_date in prev_dates:
                warn(filename, prev_dates[cur_date], '%s previously used here' % cur_date)
        prev_dates[cur_date] = n
        prev_date = cur_date


def main():
    parser = optparse.OptionParser('usage: %prog [filename]',
                version=__version__,
                description="Check /root/Changelog for consistency")
    opts, args = parser.parse_args()
    if not args:
        args = ['/root/Changelog']
    for filename in args:
        check(filename)

if __name__ == '__main__':
    main()
